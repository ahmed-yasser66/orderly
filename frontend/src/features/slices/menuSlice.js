// src/features/slices/menuSlice.js
import {
  asyncThunkCreator,
  createAsyncThunk,
  createSlice,
} from "@reduxjs/toolkit";
import { api } from "../../Firebase/api_util";
/**
 * Redux slice for managing menu-related state, including favourite menus.
 * This slice handles actions for setting, adding, and saving menu data.
 */

export const fetchFavouriteMenus = createAsyncThunk(
  "menu/fetchFavouriteMenus",
  async (adminId, thunkAPI) => {
    try {
      const menus = await api.space.getFavouriteMenuItemsByAdmin(adminId);
      return menus;
    } catch (error) {
      return thunkAPI.rejectWithValue(error.message);
    }
  }
);

const menuSlice = createSlice({
  name: "menu",
  initialState: {
    favouriteMenus: [],
    status: "idle",
    error: null,
  },

  reducers: {
    setFavouriteMenus: (state, action) => {
      state.favouriteMenus = action.payload;
    },
    addFavouriteMenu: (state, action) => {
      state.favouriteMenus.push(action.payload);
    },
    saveSpaceData: (state, action) => {
      console.log("Saving space data:", action.payload);
    },
  },
  extraReducers: (builder) => {
    builder
      .addCase(fetchFavouriteMenus.pending, (state) => {
        state.status = "loading";
      })
      .addCase(fetchFavouriteMenus.fulfilled, (state, action) => {
        state.status = "succeeded";
        state.favouriteMenus = action.payload;
      })
      .addCase(fetchFavouriteMenus.rejected, (state, action) => {
        state.status = "failed";
        state.error = action.error.message;
      });
  },
});

// Export the action creators generated by createSlice
export const { setFavouriteMenus, addFavouriteMenu, saveSpaceData } =
  menuSlice.actions;

// Export the reducer function to be combined in the Redux store
export default menuSlice.reducer;
